// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package rsqlc

import (
	"context"
	"database/sql"
)

type Querier interface {
	//AddCartItem
	//
	//  INSERT INTO cart_item (session_id, product_id, quantity, created_at, modified_at)
	//  VALUES ($1, $2, $3, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	//  ON CONFLICT (session_id, product_id) DO UPDATE
	//  SET quantity = CASE WHEN cart_item.quantity <  10  THEN cart_item.quantity + EXCLUDED.quantity
	//      ELSE 10
	//  END,
	//  modified_at = CURRENT_TIMESTAMP
	//  RETURNING cart_item.quantity
	AddCartItem(ctx context.Context, arg AddCartItemParams) error
	//CreateShoppingSession
	//
	//  INSERT INTO shopping_session (user_id, total, created_at, modified_at)
	//  VALUES ($1, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	//  RETURNING id
	CreateShoppingSession(ctx context.Context, userID sql.NullInt32) error
	//GetActiveSession
	//
	//  SELECT id, user_id, total, created_at, modified_at
	//  FROM shopping_session
	//  WHERE user_id = $1
	//  ORDER BY created_at DESC
	//  LIMIT 1
	GetActiveSession(ctx context.Context, userID sql.NullInt32) (ShoppingSession, error)
	//RemoveCartItem
	//
	//  DELETE FROM cart_item
	//  WHERE session_id = $1 AND product_id = $2
	RemoveCartItem(ctx context.Context, arg RemoveCartItemParams) (int64, error)
	//UpdateCartItemQuantity
	//
	//  UPDATE cart_item
	//  SET quantity = $3, modified_at = CURRENT_TIMESTAMP
	//  WHERE session_id = $1 AND product_id = $2
	//  RETURNING id
	UpdateCartItemQuantity(ctx context.Context, arg UpdateCartItemQuantityParams) error
}

var _ Querier = (*Queries)(nil)
